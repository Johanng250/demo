# Part One: Check if the number has 10 or more divisors
while True:
    user_input = input("Enter a number (or 'q' to quit): ").strip()  # Get user input
    if user_input.lower() == 'q':  # Exit if user inputs 'q'
        break

    try:
        number = int(user_input)  # Try converting the input to an integer
    except ValueError:
        print("Please enter a valid number.")  # Error message for invalid input
        continue  # Skip to the next loop iteration

    divisor_count = 0  # Initialize divisor count
    for i in range(1, number + 1):  # Loop to count divisors
        if number % i == 0:
            divisor_count += 1  # Increment divisor count if i is a divisor

    if divisor_count >= 10:
        print("yes")  # Print "yes" if there are 10 or more divisors
    else:
        print("no")  # Print "no" if there are less than 10 divisors

# Part Two: After the user enters 'q', prompt for another number to check special numbers
n = int(input("Enter a number to check digit sum conditions: ").strip())  # Read the value of n

# Check two-digit numbers (10 to 99) where digit sum squared equals n
for i in range(10, 100):  # Loop through two-digit numbers
    digit_sum = sum(int(digit) for digit in str(i))  # Calculate sum of digits
    if digit_sum ** 2 == n:  # Check if the square of the digit sum equals n
        print(i)

# Check three-digit numbers (100 to n) where digit sum cubed equals n
for i in range(100, n + 1):  # Loop through three-digit numbers up to n
    digit_sum = sum(int(digit) for digit in str(i))  # Calculate sum of digits
    if digit_sum ** 3 == n:  # Check if the cube of the digit sum equals n
        print(i)
